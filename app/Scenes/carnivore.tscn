[gd_scene load_steps=6 format=2]

[ext_resource path="res://Sprites/whitebackground.png" type="Texture" id=1]
[ext_resource path="res://Scripts/carnivore.gd" type="Script" id=2]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 22.2222, 23.1111 )

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 29.6296, 30.8148 )

[sub_resource type="CircleShape2D" id=3]
radius = 48.8308

[node name="carn" type="KinematicBody2D" groups=["animals", "carn"]]
modulate = Color( 0, 0, 0, 1 )
scale = Vector2( 1.5, 1.5 )
collision_mask = 6
script = ExtResource( 2 )

[node name="Sprite" type="Sprite" parent="."]
rotation = -0.785397
scale = Vector2( 0.0311315, 0.0415087 )
texture = ExtResource( 1 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="."]
scale = Vector2( 0.75, 0.75 )
shape = SubResource( 1 )

[node name="Area2D" type="Area2D" parent="."]
scale = Vector2( 0.75, 0.75 )
collision_layer = 2
collision_mask = 5

[node name="CollisionShape2D" type="CollisionShape2D" parent="Area2D"]
position = Vector2( -4.23855e-07, 8.47711e-07 )
scale = Vector2( 0.75, 0.75 )
shape = SubResource( 2 )

[node name="Timer" type="Timer" parent="."]
wait_time = 0.2
autostart = true

[node name="SenseDetection" type="Area2D" parent="." groups=["carn"]]
collision_layer = 0
collision_mask = 7

[node name="CollisionShape2D" type="CollisionShape2D" parent="SenseDetection"]
shape = SubResource( 3 )

[node name="NameLabel" type="Label" parent="."]
margin_left = -16.6667
margin_top = -31.3333
margin_right = 23.3333
margin_bottom = -17.3333
text = "0"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TraitValueLabel" type="Label" parent="."]
margin_left = -16.6667
margin_top = 18.6667
margin_right = 15.3333
margin_bottom = 32.6667
text = "0"
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="body_entered" from="Area2D" to="." method="_on_Area2D_body_entered"]
[connection signal="timeout" from="Timer" to="." method="_on_Timer_timeout"]
[connection signal="body_entered" from="SenseDetection" to="." method="_on_SenseDetection_body_entered"]
[connection signal="body_exited" from="SenseDetection" to="." method="_on_SenseDetection_body_exited"]
